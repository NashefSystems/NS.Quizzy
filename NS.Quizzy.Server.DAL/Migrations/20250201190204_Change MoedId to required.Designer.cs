// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NS.Quizzy.Server.DAL;

#nullable disable

namespace NS.Quizzy.Server.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250201190204_Change MoedId to required")]
    partial class ChangeMoedIdtorequired
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.AppSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-2147483648)
                        .HasDefaultValueSql("(NewId())");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483645)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(2147483647);

                    b.Property<bool>("IsSecured")
                        .HasColumnType("bit")
                        .HasColumnOrder(1);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(2);

                    b.Property<DateTimeOffset>("ModifiedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483646)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<string>("ValueType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique()
                        .HasFilter("IsDeleted = '0'");

                    b.ToTable("AppSettings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("795b0b48-4238-4d27-be60-3dd2cb66e424"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            IsSecured = false,
                            Key = "SavePasswordOnRememberMe",
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Target = "Client",
                            Value = "true",
                            ValueType = "Boolean"
                        });
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.Class", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-2147483648)
                        .HasDefaultValueSql("(NewId())");

                    b.Property<long>("Code")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483645)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<Guid>("GradeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(2147483647);

                    b.Property<DateTimeOffset>("ModifiedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483646)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("Name", "GradeId")
                        .IsUnique()
                        .HasFilter("IsDeleted = '0'");

                    b.ToTable("Classes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5928d27-abbf-49b9-a34b-0329b754cd76"),
                            Code = 1L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("438ec849-71cb-46b0-93b6-0147b85c5564"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י' 1"
                        },
                        new
                        {
                            Id = new Guid("ce0bd2ff-3444-435b-a17d-03ae94936904"),
                            Code = 2L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("438ec849-71cb-46b0-93b6-0147b85c5564"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י' 2"
                        },
                        new
                        {
                            Id = new Guid("167ce96a-a9f0-4910-862a-19bc0bcdf820"),
                            Code = 3L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("438ec849-71cb-46b0-93b6-0147b85c5564"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י' 3"
                        },
                        new
                        {
                            Id = new Guid("cbea4226-569b-4ec0-a330-26e2094fe2a7"),
                            Code = 4L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("438ec849-71cb-46b0-93b6-0147b85c5564"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י' 4"
                        },
                        new
                        {
                            Id = new Guid("f6845989-9704-4a39-a5d2-31f6a0df9cb3"),
                            Code = 5L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("438ec849-71cb-46b0-93b6-0147b85c5564"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י' 5"
                        },
                        new
                        {
                            Id = new Guid("f093a8a6-91d2-46f4-bc8d-42a489fc75f6"),
                            Code = 6L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("438ec849-71cb-46b0-93b6-0147b85c5564"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י' 6"
                        },
                        new
                        {
                            Id = new Guid("8e1f2e5e-7597-494f-bde9-5b290918c202"),
                            Code = 7L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("438ec849-71cb-46b0-93b6-0147b85c5564"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י' 7"
                        },
                        new
                        {
                            Id = new Guid("b096c5e7-76c6-405c-a044-5fbdbe222a3c"),
                            Code = 8L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("438ec849-71cb-46b0-93b6-0147b85c5564"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י' 8"
                        },
                        new
                        {
                            Id = new Guid("5b107d79-7df7-4f6d-8bd4-608230492e07"),
                            Code = 9L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("438ec849-71cb-46b0-93b6-0147b85c5564"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י' 9"
                        },
                        new
                        {
                            Id = new Guid("7d88b6fe-f3f3-4282-b475-82b2908e9fe0"),
                            Code = 10L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("438ec849-71cb-46b0-93b6-0147b85c5564"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י' 10"
                        },
                        new
                        {
                            Id = new Guid("859c1031-c539-4deb-adff-93bcfec85774"),
                            Code = 11L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("438ec849-71cb-46b0-93b6-0147b85c5564"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י' 11"
                        },
                        new
                        {
                            Id = new Guid("494920f9-f6d9-405c-9536-afe619749ccd"),
                            Code = 1L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("bd904a61-1129-42fb-aab4-a6b7c3dbc037"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"א 1"
                        },
                        new
                        {
                            Id = new Guid("c3424585-63a2-4e52-940a-b8979557b6ce"),
                            Code = 2L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("bd904a61-1129-42fb-aab4-a6b7c3dbc037"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"א 2"
                        },
                        new
                        {
                            Id = new Guid("c3f075c7-93ce-4122-ab7c-b989cf8e6786"),
                            Code = 3L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("bd904a61-1129-42fb-aab4-a6b7c3dbc037"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"א 3"
                        },
                        new
                        {
                            Id = new Guid("21e2f08f-9793-40aa-98a0-bbf3a8759e40"),
                            Code = 4L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("bd904a61-1129-42fb-aab4-a6b7c3dbc037"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"א 4"
                        },
                        new
                        {
                            Id = new Guid("782cb34d-7091-4e9e-9bda-c30d11e1a64d"),
                            Code = 5L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("bd904a61-1129-42fb-aab4-a6b7c3dbc037"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"א 5"
                        },
                        new
                        {
                            Id = new Guid("36b9d045-ac87-4c29-99af-ccc4755b13cc"),
                            Code = 6L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("bd904a61-1129-42fb-aab4-a6b7c3dbc037"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"א 6"
                        },
                        new
                        {
                            Id = new Guid("49211014-42b9-4486-b6a3-fb9cc7e57426"),
                            Code = 7L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("bd904a61-1129-42fb-aab4-a6b7c3dbc037"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"א 7"
                        },
                        new
                        {
                            Id = new Guid("d514ef35-7024-4836-be29-02e5f5b3bbcb"),
                            Code = 8L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("bd904a61-1129-42fb-aab4-a6b7c3dbc037"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"א 8"
                        },
                        new
                        {
                            Id = new Guid("081057a2-16df-4e2b-9e90-0cdc0dfff8f9"),
                            Code = 9L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("bd904a61-1129-42fb-aab4-a6b7c3dbc037"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"א 9"
                        },
                        new
                        {
                            Id = new Guid("b641e55e-5a1e-42e9-8acb-1356340c87f5"),
                            Code = 10L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("bd904a61-1129-42fb-aab4-a6b7c3dbc037"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"א 10"
                        },
                        new
                        {
                            Id = new Guid("2a3c8f01-ecc2-42c0-8251-16fcd68944f5"),
                            Code = 11L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("bd904a61-1129-42fb-aab4-a6b7c3dbc037"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"א 11"
                        },
                        new
                        {
                            Id = new Guid("ca5695ed-4d8a-485f-9072-29dcbc29bf84"),
                            Code = 1L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("9c9f2aac-66e7-4ac0-a407-23698cced44a"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"ב 1"
                        },
                        new
                        {
                            Id = new Guid("ebbb2b2e-4833-4860-8843-40f9cf852be7"),
                            Code = 2L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("9c9f2aac-66e7-4ac0-a407-23698cced44a"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"ב 2"
                        },
                        new
                        {
                            Id = new Guid("7a9808bd-2d4e-48e2-8692-67d44ef962ce"),
                            Code = 3L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("9c9f2aac-66e7-4ac0-a407-23698cced44a"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"ב 3"
                        },
                        new
                        {
                            Id = new Guid("8c70d35a-9a3a-4bc6-8412-778f72338c63"),
                            Code = 4L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("9c9f2aac-66e7-4ac0-a407-23698cced44a"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"ב 4"
                        },
                        new
                        {
                            Id = new Guid("f48dd2f8-9a66-4052-b31c-793e60df5004"),
                            Code = 5L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("9c9f2aac-66e7-4ac0-a407-23698cced44a"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"ב 5"
                        },
                        new
                        {
                            Id = new Guid("46c5b044-5020-4f7f-900c-93623be8bbaf"),
                            Code = 6L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("9c9f2aac-66e7-4ac0-a407-23698cced44a"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"ב 6"
                        },
                        new
                        {
                            Id = new Guid("91b2c738-8e6c-4334-bc20-9778ef792af4"),
                            Code = 7L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("9c9f2aac-66e7-4ac0-a407-23698cced44a"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"ב 7"
                        },
                        new
                        {
                            Id = new Guid("d22d38b9-0398-4aae-8ea7-a13237cace64"),
                            Code = 8L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("9c9f2aac-66e7-4ac0-a407-23698cced44a"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"ב 8"
                        },
                        new
                        {
                            Id = new Guid("1a9c42c2-148b-4da9-8620-a4b70336f451"),
                            Code = 9L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("9c9f2aac-66e7-4ac0-a407-23698cced44a"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"ב 9"
                        },
                        new
                        {
                            Id = new Guid("ebb4d04c-e099-48c8-ae3c-b123354e250c"),
                            Code = 10L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("9c9f2aac-66e7-4ac0-a407-23698cced44a"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"ב 10"
                        },
                        new
                        {
                            Id = new Guid("a238c990-8fef-4e94-8bf4-b1e9dc818dde"),
                            Code = 11L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            GradeId = new Guid("9c9f2aac-66e7-4ac0-a407-23698cced44a"),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "י\"ב 11"
                        });
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.ClassExam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-2147483648)
                        .HasDefaultValueSql("(NewId())");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483645)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<Guid>("ExamId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(2147483647);

                    b.Property<DateTimeOffset>("ModifiedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483646)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("ExamId");

                    b.ToTable("ClassExams", (string)null);
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.Exam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-2147483648)
                        .HasDefaultValueSql("(NewId())");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483645)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time")
                        .HasColumnOrder(1);

                    b.Property<TimeSpan>("DurationWithExtra")
                        .HasColumnType("time")
                        .HasColumnOrder(2);

                    b.Property<Guid>("ExamTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(2147483647);

                    b.Property<DateTimeOffset>("ModifiedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483646)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<Guid>("MoedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4);

                    b.Property<Guid>("QuestionnaireId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(5);

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("ExamTypeId");

                    b.HasIndex("MoedId");

                    b.HasIndex("QuestionnaireId");

                    b.ToTable("Exams", (string)null);
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.ExamType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-2147483648)
                        .HasDefaultValueSql("(NewId())");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483645)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(2147483647);

                    b.Property<int>("ItemOrder")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset>("ModifiedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483646)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("IsDeleted = '0'");

                    b.ToTable("ExamTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("dbdd71f4-d784-4ecd-b013-1d81a07c79ab"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 1,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "מתכונת"
                        },
                        new
                        {
                            Id = new Guid("095ce522-087b-48c1-83ee-35541ee672f6"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 2,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "מתכונת I"
                        },
                        new
                        {
                            Id = new Guid("2e50b781-6dba-4f05-8888-3b16ef618b0b"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 3,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "מתכונת II"
                        },
                        new
                        {
                            Id = new Guid("9ecb8ecd-4314-4a67-a843-756cdbc49296"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 4,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "מתכונת III"
                        },
                        new
                        {
                            Id = new Guid("fa73c215-82d0-4bcd-be22-b0eabb950315"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 5,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "בגרות"
                        },
                        new
                        {
                            Id = new Guid("9b936387-a52d-4256-8f44-c28f75fd15d5"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 6,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "סימולציה"
                        });
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.Grade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-2147483648)
                        .HasDefaultValueSql("(NewId())");

                    b.Property<long>("Code")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483645)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(2147483647);

                    b.Property<DateTimeOffset>("ModifiedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483646)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("IsDeleted = '0'");

                    b.ToTable("Grades", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("438ec849-71cb-46b0-93b6-0147b85c5564"),
                            Code = 10L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "שכבה י'"
                        },
                        new
                        {
                            Id = new Guid("bd904a61-1129-42fb-aab4-a6b7c3dbc037"),
                            Code = 11L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "שכבה י\"א"
                        },
                        new
                        {
                            Id = new Guid("9c9f2aac-66e7-4ac0-a407-23698cced44a"),
                            Code = 12L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "שכבה י\"ב"
                        },
                        new
                        {
                            Id = new Guid("cde133c3-0e33-4bcb-bee0-cc7d93ae3cb9"),
                            Code = 13L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "שכבה י\"ג"
                        },
                        new
                        {
                            Id = new Guid("2bddc474-2779-4bb3-a73d-df90cd8f4c24"),
                            Code = 14L,
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "שכבה י\"ד"
                        });
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.GradeExam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-2147483648)
                        .HasDefaultValueSql("(NewId())");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483645)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<Guid>("ExamId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("GradeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(2147483647);

                    b.Property<DateTimeOffset>("ModifiedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483646)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("GradeId");

                    b.ToTable("GradeExams", (string)null);
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.Moed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-2147483648)
                        .HasDefaultValueSql("(NewId())");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483645)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(2147483647);

                    b.Property<int>("ItemOrder")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset>("ModifiedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483646)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("IsDeleted = '0'");

                    b.ToTable("Moeds", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("72cde11d-b3f6-47f2-9909-51bcd30ff086"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 1,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "חורף"
                        },
                        new
                        {
                            Id = new Guid("1e33f673-6773-4db1-b6cf-909586a6544b"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 2,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "אביב"
                        },
                        new
                        {
                            Id = new Guid("159bb5e6-9460-4e43-ba3c-b5967cf99f4e"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 3,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "קיץ"
                        },
                        new
                        {
                            Id = new Guid("1c3a5be0-9727-4a9d-b525-1461f33ded8f"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 4,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "קיץ מועד ב'"
                        });
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.Questionnaire", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-2147483648)
                        .HasDefaultValueSql("(NewId())");

                    b.Property<long>("Code")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483645)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time")
                        .HasColumnOrder(2);

                    b.Property<TimeSpan>("DurationWithExtra")
                        .HasColumnType("time")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(2147483647);

                    b.Property<DateTimeOffset>("ModifiedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483646)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("IsDeleted = '0'");

                    b.HasIndex("SubjectId");

                    b.ToTable("Questionnaires", (string)null);
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-2147483648)
                        .HasDefaultValueSql("(NewId())");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483645)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(2147483647);

                    b.Property<int>("ItemOrder")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset>("ModifiedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483646)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("IsDeleted = '0'");

                    b.ToTable("Subjects", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9b8f8b4e-19fe-4f98-a9e1-0234d8331f24"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 1,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "ערבית"
                        },
                        new
                        {
                            Id = new Guid("c21fe042-8ac9-4832-8e5b-04bb7da03eed"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 2,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "עברית"
                        },
                        new
                        {
                            Id = new Guid("2f51a0af-bbce-4292-98f6-283628079f26"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 3,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "אנגלית"
                        },
                        new
                        {
                            Id = new Guid("4e092ba1-95f8-4df3-a8b8-34d75175f0a0"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 4,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "מתמטיקה"
                        },
                        new
                        {
                            Id = new Guid("30c570b2-e338-4505-ab1a-480f1776f9b8"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 5,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "אזרחות"
                        },
                        new
                        {
                            Id = new Guid("55f0178a-8339-47a2-ae3f-4c2b859fd52d"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 6,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "היסטוריה"
                        },
                        new
                        {
                            Id = new Guid("b91976cb-943a-4bd7-8177-508c72d0fb06"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 7,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "דת האיסלם"
                        },
                        new
                        {
                            Id = new Guid("f74c6ff8-47b1-4383-a932-735add064955"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 8,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "כימיה"
                        },
                        new
                        {
                            Id = new Guid("81e4f556-c783-4e66-a816-751c3765e501"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 9,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "ביולוגיה"
                        },
                        new
                        {
                            Id = new Guid("9671ed50-624e-4a3b-9e25-b22d4cbdd09d"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 10,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "מדעי הבריאות"
                        },
                        new
                        {
                            Id = new Guid("5bd83139-bbdf-4d76-a289-baac22ca831c"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 11,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "מדעי הסביבה"
                        },
                        new
                        {
                            Id = new Guid("ebfa96fb-150d-49d3-a688-bfa1c8035014"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 12,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "תקשוב"
                        },
                        new
                        {
                            Id = new Guid("8659e673-60e2-4fe4-9d83-c3df37fa5b96"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 13,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "מדעי המחשב"
                        },
                        new
                        {
                            Id = new Guid("964e0673-821e-4f31-a29d-c9f587f8fb02"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 14,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "פיזיקה"
                        },
                        new
                        {
                            Id = new Guid("4e5a656f-13dc-4ce7-8504-cf67954c95ae"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 15,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "מדעי ההנדסה"
                        },
                        new
                        {
                            Id = new Guid("1adfd42f-aac6-4ca5-8458-cfeb2fd42903"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 16,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "מערכות חשמל"
                        },
                        new
                        {
                            Id = new Guid("d506c818-3300-4783-bb2e-e7005eef269f"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 17,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "הנדסאים"
                        },
                        new
                        {
                            Id = new Guid("eff998d1-eb15-4c10-bd82-e7b861e71923"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 18,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "טכנאים"
                        },
                        new
                        {
                            Id = new Guid("0157322f-40f3-4e07-b65a-ebc1b408e644"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            ItemOrder = 19,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "חינוך תעבורתי"
                        });
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-2147483648)
                        .HasDefaultValueSql("(NewId())");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483645)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(1);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(2147483647);

                    b.Property<DateTimeOffset>("ModifiedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2147483646)
                        .HasDefaultValueSql("(SYSDATETIMEOFFSET())");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Student")
                        .HasColumnOrder(4);

                    b.Property<string>("TwoFactorSecretKey")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("IsDeleted = '0'");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4320e74b-5821-4a30-94b7-cc88dddc45ee"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "Nashef.Systems@Gmail.com",
                            FullName = "System",
                            IsDeleted = true,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Password = "yYZo4vAwJn7BtJ1x3MvbIHoQul3eoSduPbhS+pkZL/8=",
                            Role = "SuperAdmin",
                            TwoFactorSecretKey = "97F1AFCD316343B4B2D492A10B036680"
                        },
                        new
                        {
                            Id = new Guid("b900d543-90ab-4e7a-83ba-b961918dcc8c"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "Nashef90@Gmail.com",
                            FullName = "Admin",
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Password = "j9Q7vYJckIupzSmvlKwiPg==",
                            Role = "Developer",
                            TwoFactorSecretKey = "XD2GB3DYXAGZGGOXG46TD3QKBQXQYYKO"
                        },
                        new
                        {
                            Id = new Guid("2325b8ae-f12a-43d8-be46-7041e57c9283"),
                            CreatedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "saji.nashef@gmail.com",
                            FullName = "Saji Nashef",
                            IsDeleted = false,
                            ModifiedTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Password = "jXg9GRdykHODQX8Kzxs8kiiZ92sfPDa3kH+lHmwHq+Q=",
                            Role = "Admin",
                            TwoFactorSecretKey = "L2PUPNK2U5SIIDHZUPWW6HHYRY7ZQSYX"
                        });
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.Class", b =>
                {
                    b.HasOne("NS.Quizzy.Server.DAL.Entities.Grade", "Grade")
                        .WithMany("Classes")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.ClassExam", b =>
                {
                    b.HasOne("NS.Quizzy.Server.DAL.Entities.Class", "Class")
                        .WithMany("ClassExams")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Quizzy.Server.DAL.Entities.Exam", "Exam")
                        .WithMany("ClassExams")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.Exam", b =>
                {
                    b.HasOne("NS.Quizzy.Server.DAL.Entities.ExamType", "ExamType")
                        .WithMany("Exams")
                        .HasForeignKey("ExamTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Quizzy.Server.DAL.Entities.Moed", "Moed")
                        .WithMany("Exams")
                        .HasForeignKey("MoedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Quizzy.Server.DAL.Entities.Questionnaire", "Questionnaire")
                        .WithMany("Exams")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamType");

                    b.Navigation("Moed");

                    b.Navigation("Questionnaire");
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.GradeExam", b =>
                {
                    b.HasOne("NS.Quizzy.Server.DAL.Entities.Exam", "Exam")
                        .WithMany("GradeExams")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Quizzy.Server.DAL.Entities.Grade", "Grade")
                        .WithMany("GradeExams")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.Questionnaire", b =>
                {
                    b.HasOne("NS.Quizzy.Server.DAL.Entities.Subject", "Subject")
                        .WithMany("Questionnaires")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.Class", b =>
                {
                    b.Navigation("ClassExams");
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.Exam", b =>
                {
                    b.Navigation("ClassExams");

                    b.Navigation("GradeExams");
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.ExamType", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.Grade", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("GradeExams");
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.Moed", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.Questionnaire", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("NS.Quizzy.Server.DAL.Entities.Subject", b =>
                {
                    b.Navigation("Questionnaires");
                });
#pragma warning restore 612, 618
        }
    }
}
