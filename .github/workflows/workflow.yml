name: Build, Publish NuGet, and Create Release

on:
  repository_dispatch:
    types: [API]  # This should match the event type you'll use in the API call

  workflow_dispatch:

  push:
    branches:
      - master

concurrency:
    group: "${{ github.event.repository.name }}_group"

jobs:
    CheckBranch:
      runs-on: ubuntu-latest
      steps:
        - name: Print event variables
          run: |
            echo "Event name: '${{ github.event_name }}'"
            echo "Reference name (branch or tag): '${{ github.ref_name }}'"
            echo "Client payload branch: '${{ github.event.client_payload.branch }}'"

        - name: Check branch and handle warning
          run: |
            branch="${{ github.event.client_payload.branch }}"            
            if [[ -z "${branch}" ]]; then
              branch="${{ github.ref_name }}"
            fi

            if [[ "${branch}" != "master" && "${branch}" != "develop" ]]; then
              echo "::error::Error: Branch '${branch}' is not 'master' or 'develop'."
              exit 1
            else
              echo "Branch is allowed: ${branch}"
            fi

    BuildAndDeploy_master:
        needs: CheckBranch
        if: |
          (github.event_name == 'push' && github.ref_name == 'master') ||
          (github.event_name == 'workflow_dispatch' && github.ref_name == 'master') ||
          (github.event_name == 'repository_dispatch' && github.event.client_payload.branch == 'master')
        uses: NashefSystems/NS.DevOps.Files/.github/workflows/DotNetKubernetes_CI-CD.yml@master
        with:
            BRANCH: "master"
            K8S_NAMESPACE: "quizzy-system"
            HELM_NAME: "ns-quizzy"
            HELM_DIR: "./k8s/ns-quizzy"
            HELM_VALUE_FILE_NAME: "values.yaml"
            IMAGE_REPO: "${{ vars.V_IMAGE_REPO_BASE }}/ns-quizzy"
            ENVIRONMENT_NAME: "Production"
            DOCKER_FILE_PATH: "./NS.Quizzy.Server/Dockerfile"
            VERSION_FRAGMENT: "patch"
            K8S_INSTANCE: "SAJI_OCI"
        secrets: inherit
